function fixerio_update(e){jQuery.getJSON("http://api.fixer.io/latest",function(i){for(var a,t="#%CURRENCY%-data",o=0;o<e.length;o++)a=t.replace("%CURRENCY%",e[o]),$(a).text(i.rates[e[o]]);setTimeout(fixerio_update,3e5,e)})}function fixerio_api(e){jQuery.getJSON("http://api.fixer.io/latest",function(i){var a=$("#currenciesTarget"),t='<tr><td>%CURRENCY%</td><td id="%CURRENCY%-data"></td></tr>',o="<tr><td>%CURRENCY%</td><td>%AMOUNT%</td></tr>",n="#%CURRENCY%-data",r=o.replace("%CURRENCY%",i.base),s=n;r=r.replace("%AMOUNT%","1.00"),a.append(r);for(var l=0;l<e.length;l++)r=t.replace("%CURRENCY%",e[l]),r=r.replace("%CURRENCY%",e[l]),s=n.replace("%CURRENCY%",e[l]),a.append(r),$(s).text(i.rates[e[l]]);setTimeout(fixerio_update,3e5,e)})}function MainViewModel(e){var i=this;i.currencies=["USD","CHF","GBP","AUD","CAD","CZK"],i.searchTerm=ko.observable(""),i.Rome={lat:41.9,lng:12.5},i.map=new google.maps.Map(document.getElementById("romeMap"),{zoom:13,center:i.Rome,clickableIcons:!1}),i.latLngFinder=new google.maps.Geocoder,i.container=ko.observable(new LocContainer(e,i.map)),i.container().wikiGets(i.latLngFinder),i.setView=function(e){i.container().setView(e)},i.searchIt=function(){i.container().search(i.searchTerm()),console.log(i.searchTerm())},i.setView(0)}function initialize(){main=new MainViewModel(locationData),fixerio_api(main.currencies),ko.applyBindings(main)}function initMap(){google.maps.event.addDomListener(window,"load",initialize)}var locationData={"rome-app":[{name:"Colosseum",address:["Piazza del Colosseo, Rome, Italy"],website:"http://www.coopculture.it/en/the-colosseum.cfm",wiki:"https://en.wikipedia.org/wiki/Colosseum",type:0,keywords:["gladiator","fight","ring","games","sport"]},{name:"Pantheon, Rome",address:["Piazza della Rotonda, 00186 Roma, Italy"],website:"http://www.turismoroma.it/cosa-fare/pantheon?lang=en",wiki:"https://en.wikipedia.org/wiki/Pantheon,_Rome",type:0,keywords:["church","dome","temple"]},{name:"St. Peter's Basilica",address:["Piazza San Pietro, 00120 CittÃ  del Vaticano, Vatican City"],website:"http://www.vaticanstate.va/content/vaticanstate/en/monumenti/basilica-di-s-pietro.html",wiki:"https://en.wikipedia.org/wiki/St._Peter%27s_Basilica",type:0,keywords:["church","basilica","vatican","pope","peter","saint"]},{name:"Pyramid of Cestia",address:["Via Raffaele Persichetti, 00153 Roma, Italy"],website:"http://www.coopculture.it/en/heritage.cfm?id=59",wiki:"https://en.wikipedia.org/wiki/Pyramid_of_Cestius",type:0,keywords:["pyramid","gaius","cestius","tomb","ruins"]},{name:"Underground Basilica of Porta Maggiore",address:["Piazzale Labicano angolo via Prenestina, Via Prenestina, Roma, Italy"],website:"http://archeoroma.beniculturali.it/en/archaeological-site/underground-basilica-near-porta-maggiore",wiki:"https://en.wikipedia.org/wiki/Underground_basilica_of_Porta_Maggiore",type:0,keywords:["basilica","underground","neopythagoreans"]},{name:"Palazzo Delle Esposizioni",address:["Via Nazionale, 194, 00184 Roma, Italy"],website:"http://english.palazzoesposizioni.it/Home.aspx",wiki:"https://en.wikipedia.org/wiki/Palazzo_delle_Esposizioni",type:0,keywords:["exhibition","hall","cultural","center","museum"]},{name:"Palatine Hill",address:["Via della Salara Vecchia, 5/6, Roma, Italy"],website:"http://www.coopculture.it/en/heritage.cfm?id=4",wiki:"https://en.wikipedia.org/wiki/Palatine_Hill",type:0,keywords:["palatine","hill","forum","ruins","ancient","rome"]},{name:"Tourist Information Centers",address:["Via Giovanni Giolitti 34, Roma, Italy"],website:"http://www.turismoroma.it/info_viaggio/pit",wiki:"none",type:1,keywords:["information","center","pit","point"]},{name:"Roma Termini",address:["Roma Termini, Italy"],website:"http://www.trenitalia.com/tcom-en",wiki:"https://en.wikipedia.org/wiki/Roma_Termini_railway_station",type:3,keywords:["trains","station","choo"]},{name:"Trevi Fountain",address:["Piazza di Trevi, 00187 Roma, Italy"],website:"http://www.trevifountain.net/",wiki:"https://en.wikipedia.org/wiki/Trevi_Fountain",type:0,keywords:["trevi","fountain","wish","salvi","bracci"]}]},Location=function(e,i){var a=this;a.name=i.name||"",a.address=i.address||[],a.wiki=i.wiki||"",a.type=i.type||0,a.website=i.website||"",a.keywords=i.keywords||[],a.hasMarker=!1,a.markers=[],a.hasInfoWindow=!1,a.visible=!0,a.wikiDisplay="",a.map=e};Location.prototype=Object.create(Object.prototype),Location.prototype.constructor=Location,Location.prototype.addMarker=function(e,i){var a=this;if(i==google.maps.GeocoderStatus.OK){for(var t=-1,o=-1,n=-1,r=0,s=e.length-1;s>=0;s--){var l=e[s].geometry.location_type;"ROOFTOP"==l?t=s:"GEOMETRIC_CENTER"==l?n=s:"APPROXIMATE"==l&&(o=s)}t>=0?r=t:o>=0?r=o:n>=0&&(r=n),a.markers.push(new google.maps.Marker({position:{lat:e[r].geometry.location.lat(),lng:e[r].geometry.location.lng()},draggable:!1,animation:google.maps.Animation.DROP,map:a.map,title:a.name})),a.hasInfoWindow||(a.infoWindow=new google.maps.InfoWindow({content:a.wikiDisplay}),a.hasInfoWindow=!0);var c=a.markers.length-1;return a.markers[c].addListener("click",function(){null!==a.markers[c].getAnimation()?(a.markers[c].setAnimation(null),a.infoWindow.close()):(a.markers[c].setAnimation(google.maps.Animation.BOUNCE),a.infoWindow.open(a.map,a.markers[c]))}),a.infoWindow.addListener("closeclick",function(){a.infoWindow.close(),a.markers[c].setAnimation(null)}),a.hasMarker=!0,0}return console.log("Error trying to access the Geocoder. Status:",i),-1},Location.prototype.isVisible=function(e){var i=this;if(i.visible=e,e)for(var a=i.markers.length-1;a>=0;a--)i.markers[a].setMap(i.map);else for(var t=i.markers.length-1;t>=0;t--)i.markers[t].setMap(null)},Location.prototype.search=function(e){var i=this,a=e.toLowerCase();if(0===a.length)return i.isVisible(!0),!0;if(i.name.toLowerCase().includes(a))return i.isVisible(!0),!0;for(var t=i.keywords.length-1;t>=0;t--)if(i.keywords[t].toLowerCase().includes(a))return i.isVisible(!0),!0;return i.isVisible(!1),!1},Location.prototype.wikiGet=function(e){var i=this,a="https://en.wikipedia.org/w/api.php";$.ajax({url:a+"?action=opensearch&search="+i.name+"&format=json",type:"GET",dataType:"jsonp"}).done(function(e){var a='<h3>%TITLE%</h3><p>%DESCRIPTION%</p><p>Find out more <a href="%WIKIURL%">here</a> at Wikipedia or <a href="%WEBURL%">here</a> at the home page.</p>';if(a=a.replace("%WEBURL%",i.website),"none"!=i.wiki){for(var t=e[3].length-1;t>=0;t--)if(e[3][t]==i.wiki){a=a.replace("%TITLE%",e[1][t]),a=a.replace("%DESCRIPTION%",e[2][t]),a=a.replace("%WIKIURL%",i.wiki),i.wikiDisplay=a;break}0===i.wikiDisplay.length&&(a=a.replace("%TITLE%",e[1][0]),a=a.replace("%DESCRIPTION%",e[2][0]),a=a.replace("%WIKIURL%",i.wiki),i.wikiDisplay=a)}else{var o='<h3>%NAME%</h3><p>Could not find any data from Wikipedia from this location but you can go to the website <a href="%WEBURL%">here</a></p>';o=o.replace("%NAME%",i.name),o=o.replace("%WEBURL%",i.website),i.wikiDisplay=o}}).fail(function(e){console.log("Failed AJAX request");var a='<h3>%NAME%</h3><p>Could not find any data from Wikipedia from this location but you can go to the website <a href="%WEBURL%">here</a></p>';a=a.replace("%NAME%",i.name),a=a.replace("%WEBURL%",i.website),i.wikiDisplay=a}).always(function(a){for(var t=i.address.length-1;t>=0;t--)e.geocode({address:i.address[t]},function(e,a){i.addMarker(e,a),"ZERO_RESULTS"==a&&console.log(e.toString())})})};var LocContainer=function(e,i){var a=this;a.map=i,a.locations=ko.observableArray(),e["rome-app"].forEach(function(e){a.locations.push(new Location(a.map,e))})};LocContainer.prototype=Object.create(Object.prototype),LocContainer.prototype.constructor=LocContainer,LocContainer.prototype.setView=function(e){for(var i=this,a=0;a<i.locations().length;a++)i.locations()[a].type==e?i.locations()[a].isVisible(!0):2===e?i.locations()[a].isVisible(!0):i.locations()[a].isVisible(!1)},LocContainer.prototype.wikiGets=function(e){for(var i=this,a=i.locations().length-1;a>=0;a--)i.locations()[a].wikiGet(e)},LocContainer.prototype.search=function(e){for(var i=this,a=i.locations().length-1;a>=0;a--)i.locations()[a].search(e)};var main;
//# sourceMappingURL=data:application/json;base64,
